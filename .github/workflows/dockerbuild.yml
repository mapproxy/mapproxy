name: Docker Build and Publish

permissions:
  packages: write

on:
  push:
    tags:
      - "*.*.*"
jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}/mapproxy
          tags: |
            type=semver,pattern={{version}}

  build-and-publish-ubuntu:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base image
        uses: docker/build-push-action@v6
        with:
          context: docker/
          file: ./docker/Dockerfile
          push: true
          build-args: |
            MAPPROXY_VERSION=${{ needs.get-version.outputs.version }}
          target: base
          tags: ${{ needs.get-version.outputs.version }}

      - name: Build and push development image
        uses: docker/build-push-action@v6
        with:
          context: docker/
          file: ./docker/Dockerfile
          push: true
          build-args: |
            MAPPROXY_VERSION=${{ needs.get-version.outputs.version }}
          target: development
          tags: ${{ needs.get-version.outputs.version }}-dev

      - name: Build and push nginx image
        uses: docker/build-push-action@v4
        with:
          context: docker/
          file: ./docker/Dockerfile
          push: true
          build-args: |
            MAPPROXY_VERSION=${{ needs.get-version.outputs.version }
          target: nginx
          tags: ${{ needs.get-version.outputs.version }}-nginx
