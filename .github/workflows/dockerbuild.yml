name: Docker Build and Publish

permissions:
  packages: write

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Manual supplied image tag like 1.16.0'
        required: true
        type: string
  push:
    tags:
      - "*.*.*"
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/mapproxy
          tags: |
            type=semver,pattern={{version}}

      - name: Get tag
        id: tag
        run: >-
          echo "tag=$(
            echo ${{ inputs.tags }} || echo ${{ steps.meta.outputs.tags }}  
          )" >> $GITHUB_OUTPUT

      - name: Show tag
        run: echo ${{ steps.tag.outputs.tag }}

#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Login to ghcr.io
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Build and push base image
#        uses: docker/build-push-action@v5
#        if: ${{ inputs.tags }}
#        with:
#          file: ./Dockerfile
#          push: true
#          target: base
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ inputs.tags }}
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push base image
#        uses: docker/build-push-action@v5
#        if: ${{ !inputs.tags }}
#        with:
#          file: ./Dockerfile
#          push: true
#          target: base
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push development image
#        uses: docker/build-push-action@v5
#        if: ${{ inputs.tags }}
#        with:
#          file: ./Dockerfile
#          push: true
#          target: development
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ inputs.tags }}-dev
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push development image
#        uses: docker/build-push-action@v5
#        if: ${{ !inputs.tags }}
#        with:
#          file: ./Dockerfile
#          push: true
#          target: development
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}-dev
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push nginx image
#        uses: docker/build-push-action@v5
#        if: ${{ inputs.tags }}
#        with:
#          file: ./Dockerfile
#          push: true
#          target: nginx
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ inputs.tags }}-nginx
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push nginx image
#        uses: docker/build-push-action@v5
#        if: ${{ !inputs.tags }}
#        with:
#          file: ./Dockerfile
#          push: true
#          target: nginx
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}-nginx
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push base alpine image
#        uses: docker/build-push-action@v5
#        if: ${{ inputs.tags }}
#        with:
#          context: docker/
#          file: ./Dockerfile-alpine
#          push: true
#          target: base
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ inputs.tags }}-alpine
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push base alpine image
#        uses: docker/build-push-action@v5
#        if: ${{ !inputs.tags }}
#        with:
#          file: ./Dockerfile-alpine
#          push: true
#          target: base
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}-alpine
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push alpine development image
#        uses: docker/build-push-action@v5
#        if: ${{ inputs.tags }}
#        with:
#          file: ./Dockerfile-alpine
#          push: true
#          target: development
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ inputs.tags }}-alpine-dev
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push alpine development image
#        uses: docker/build-push-action@v5
#        if: ${{ !inputs.tags }}
#        with:
#          file: ./Dockerfile-alpine
#          push: true
#          target: development
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}-alpine-dev
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push alpine based nginx image
#        uses: docker/build-push-action@v5
#        if: ${{ inputs.tags }}
#        with:
#          file: ./Dockerfile-alpine
#          push: true
#          target: nginx
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ inputs.tags }}-alpine-nginx
#          platforms: linux/amd64,linux/arm64
#
#      - name: Build and push alpine based nginx image
#        uses: docker/build-push-action@v5
#        if: ${{ !inputs.tags }}
#        with:
#          file: ./docker/Dockerfile-alpine
#          push: true
#          target: nginx
#          tags: |
#            ghcr.io/${{ github.repository }}/mapproxy:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}-alpine-nginx
#          platforms: linux/amd64,linux/arm64
