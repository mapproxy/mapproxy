name: Docker Build and Publish

permissions:
  packages: write

on:
  push:
    tags:
      - "*.*.*"
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}/mapproxy
          tags: |
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          push: true
          target: base
          tags: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push development image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          push: true
          target: development
          tags: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}-dev
          platforms: linux/amd64,linux/arm64

      - name: Build and push nginx image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          push: true
          target: nginx
          tags: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}-nginx
          platforms: linux/amd64,linux/arm64

      - name: Build and push base alpine image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile-alpine
          push: true
          target: base
          tags: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}-alpine
          platforms: linux/amd64,linux/arm64

      - name: Build and push alpine development image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile-alpine
          push: true
          target: development
          tags: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}-alpine-dev
          platforms: linux/amd64,linux/arm64

      - name: Build and push alpine based nginx image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile-alpine
          push: true
          target: nginx
          tags: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}-alpine-nginx
          platforms: linux/amd64,linux/arm64

      - name: Run trivy
        uses: aquasecurity/trivy-action@master
        with:
          format: 'table'
          ignore-unfixed: true
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          vuln-type: 'os,library'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
