<?xml version="1.0"?>
<WMS_Capabilities xmlns="http://www.opengis.net/wms" xmlns:sld="http://www.opengis.net/sld" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.3.0" xsi:schemaLocation="http://www.opengis.net/wms http://schemas.opengis.net/wms/1.3.0/capabilities_1_3_0.xsd">
<Service>
  <Name>WMS</Name>
  <Title>{{service.title}}</Title>
  <Abstract>{{service.abstract}}</Abstract>
{{if service.online_resource}}
  <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{{service.online_resource}}"/>
{{else}}
  <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{{service.url}}"/>
{{endif}}
{{if service.contact}}
{{py:service.contact = bunch(default='', **service.contact)}}
  <ContactInformation>
      <ContactPersonPrimary>
        <ContactPerson>{{service.contact.person}}</ContactPerson>
        <ContactOrganization>{{service.contact.organization}}</ContactOrganization>
      </ContactPersonPrimary>
      <ContactPosition>{{service.contact.position}}</ContactPosition>
      <ContactAddress>
        <AddressType>{{service.contact.get('address_type', 'postal')}}</AddressType>
        <Address>{{service.contact.address}}</Address>
        <City>{{service.contact.city}}</City>
        <StateOrProvince>{{service.contact.state}}</StateOrProvince>
        <PostCode>{{service.contact.postcode}}</PostCode>
        <Country>{{service.contact.country}}</Country>
      </ContactAddress>
      <ContactVoiceTelephone>{{service.contact.phone}}</ContactVoiceTelephone>
      <ContactFacsimileTelephone>{{service.contact.fax}}</ContactFacsimileTelephone>
      <ContactElectronicMailAddress>{{service.contact.email}}</ContactElectronicMailAddress>
  </ContactInformation>
{{endif}}
    <Fees>{{service.get('fees', 'none')}}</Fees>
    <AccessConstraints>{{service.get('access_constraints', 'none')}}</AccessConstraints>
</Service>

<Capability>
  <Request>
    <GetCapabilities>
      <Format>text/xml</Format>
      <DCPType>
        <HTTP>
          <Get><OnlineResource xlink:href="{{service.url}}?"/></Get>
        </HTTP>
      </DCPType>
    </GetCapabilities>
    <GetMap>
{{for format in formats}}
      <Format>{{format}}</Format>
{{endfor}}
      <DCPType>
        <HTTP>
          <Get><OnlineResource xlink:href="{{service.url}}?"/></Get>
        </HTTP>
      </DCPType>
    </GetMap>
    <GetFeatureInfo>
{{for format in info_formats}}
      <Format>{{format}}</Format>
{{endfor}}
      <DCPType>
        <HTTP>
          <Get><OnlineResource xlink:href="{{service.url}}?"/></Get>
        </HTTP>
      </DCPType>
    </GetFeatureInfo>
{{if service.has_legend}}
    <sld:GetLegendGraphic>
{{for format in formats}}
      <Format>{{format}}</Format>
{{endfor}}
      <DCPType>
        <HTTP>
          <Get><OnlineResource xlink:href="{{service.url}}?"/></Get>
        </HTTP>
      </DCPType>
    </sld:GetLegendGraphic>
{{endif}}
  </Request>
  <Exception>
    <Format>XML</Format>
    <Format>INIMAGE</Format>
    <Format>BLANK</Format>
  </Exception>
{{def layer_capabilities(layer, with_srs)}}
  {{py: md = bunch(default='', **layer.md)}}

  <Layer{{if layer.queryable}} queryable="1"{{endif}}>
    {{if layer.name}}
    <Name>{{ layer.name }}</Name>
    {{endif}}
    <Title>{{ layer.title }}</Title>
    {{if md.abstract}}
    <Abstract>{{md.abstract}}</Abstract>
    {{endif}}
    {{if md.keyword_list and len(md.keyword_list) > 0}}
    <KeywordList>
    {{for list in md.keyword_list}}
      {{py: kw=bunch(default='', **list)}}
      {{for keyword in kw.keywords}}
      <Keyword{{if kw.vocabulary}} vocabulary="{{kw.vocabulary}}"{{endif}}>{{keyword}}</Keyword>
      {{endfor}}
    {{endfor}}
    </KeywordList>
    {{endif}}
    {{if with_srs}}
    {{for s in srs}}
    <CRS>{{s}}</CRS>
    {{endfor}}
    {{endif}}
    {{py: extent = limit_llbbox(layer.extent.llbbox)}}
    <EX_GeographicBoundingBox>
      <westBoundLongitude>{{ extent[0] }}</westBoundLongitude>
      <eastBoundLongitude>{{ extent[2] }}</eastBoundLongitude>
      <southBoundLatitude>{{ extent[1] }}</southBoundLatitude>
      <northBoundLatitude>{{ extent[3] }}</northBoundLatitude>
    </EX_GeographicBoundingBox>
    <BoundingBox CRS="CRS:84" minx="{{ extent[0] }}" miny="{{ extent[1] }}" maxx="{{ extent[2] }}" maxy="{{ extent[3] }}" />
    {{for srs_code, bbox in layer_srs_bbox(layer, epsg_axis_order=True)}}
    <BoundingBox CRS="{{srs_code}}" minx="{{ bbox[0] }}" miny="{{ bbox[1] }}" maxx="{{ bbox[2] }}" maxy="{{ bbox[3] }}" />
    {{endfor}}
    {{if md.attribution}}
    {{py: attribution = bunch(default='', **md.attribution)}}
    <Attribution>
      {{if attribution.title}}
      <Title>{{attribution.title}}</Title>
      {{endif}}
      {{if attribution.url}}
      <OnlineResource xlink:href="{{attribution.url|escape}}"/>
      {{endif}}
      {{if attribution.logo}}
      {{py: logo = bunch(default='', **attribution.logo)}}
      <LogoURL{{if logo.width}} width="{{logo.width}}"{{endif}}{{if logo.height}} height="{{logo.height}}"{{endif}}>
        {{if logo.format}}
        <Format>{{logo.format}}</Format>
        {{endif}}
        {{if logo.url}}
        <OnlineResource xlink:href="{{logo.url|escape}}"/>
        {{endif}}
      </LogoURL>
      {{endif}}
    </Attribution>
    {{endif}}
    {{if md.identifier}}
    {{for idf in md.identifier}}
    {{py: idf=bunch(default='', **idf)}}
    <AuthorityURL name="{{idf.name}}">
    {{if idf.url}}
      <OnlineResource xlink:href="{{idf.url|escape}}" />
    {{endif}}
    </AuthorityURL>
    {{endfor}}
    {{for idf in md.identifier}}
    {{py:idf=bunch(default='', **idf)}}
    <Identifier authority="{{idf.name}}">{{idf.value}}</Identifier>
    {{endfor}}
    {{endif}}
{{if md.metadata}}{{ layer_meta_tag('MetadataURL', md.metadata) }}{{endif}}
{{if md.data}}{{layer_meta_tag('DataURL', md.data)}}{{endif}}
{{if md.feature_list}}{{layer_meta_tag('FeatureListURL', md.feature_list)}}{{endif}}
{{if layer.is_active and layer.has_legend and layer.legend_url}}
    <Style>
      <Name>default</Name>
      <Title>default</Title>
      <LegendURL>
        <Format>image/png</Format>
        <OnlineResource xlink:type="simple" xlink:href="{{service.url}}{{layer.legend_url|escape}}" />
      </LegendURL>
    </Style>
{{endif}}
    {{if layer.res_range}}
    {{py: min_scale, max_scale = layer.res_range.scale_denominator()}}
    {{if min_scale}}<MinScaleDenominator>{{min_scale}}</MinScaleDenominator>{{endif}}
    {{if max_scale}}<MaxScaleDenominator>{{max_scale}}</MaxScaleDenominator>{{endif}}
    {{endif}}
    {{for layer in layer.layers}}
{{layer_capabilities(layer, False)|indent}}
    {{endfor}}
  </Layer>
{{enddef}}

{{def layer_meta_tag(tag, config)}}
  {{for data in config}}
  {{py: data=bunch(default='', **data)}}
    <{{tag}}{{if data.type}} type="{{data.type|escape}}"{{endif}}>
      {{if data.format}}
      <Format>{{data.format}}</Format>
      {{endif}}
      <OnlineResource xlink:href="{{data.url|escape}}"/>
    </{{tag}}>
  {{endfor}}
{{enddef}}

{{layer_capabilities(layers, True)}}

</Capability>
</WMS_Capabilities>
